/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fuckyoupingu;

import fuckyoupingu.model.XPMConverter;
import java.awt.Color;
import java.io.File;
import java.io.IOException;
import javax.swing.InputVerifier;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;

/**
 *
 * @author jbraga
 */
public class RotateXPMUI extends javax.swing.JDialog {

    private File xpmf;
    
    /**
     * Creates new form RotateXPMUI
     */
    public RotateXPMUI(java.awt.Frame parent, boolean modal,File xpmf) {
        super(parent, modal);
        initComponents();
        this.xpmf=xpmf;
        InputVerifier numberVerifier = new InputVerifier() {

            @Override
            public boolean verify(JComponent input) {
                boolean result = false;
                if (input.getClass().equals(JTextField.class))
                {
                    JTextField component = (JTextField) input;
                    result = component.getText().matches("[0-9].*(.[0-9]*)?");
                }
                if (!result)
                {
                    SwingUtilities.invokeLater(() -> {
                        JOptionPane.showMessageDialog(null,"Value must be a decimal number!","ERROR",JOptionPane.ERROR_MESSAGE);
                    });
                    input.setBackground(Color.red);
                }
                else
                {
                    input.setBackground(Color.white);
                }
                return result;
            }
        };
        angleField.setInputVerifier(numberVerifier);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        angleField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Angle (degrees):");

        jButton1.setText("Rotate");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(angleField, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(angleField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try 
        {
            File file = xpmf;
            double angle =
                    Math.toRadians(Double.parseDouble(angleField.getText()));

            XPMConverter xpm = new XPMConverter();
            String name = file.getName();
            name = name.substring(0,name.indexOf("."))+"_rotated.xpm";
            xpm.setName(name);
            if (xpm.save(XPMConverter.rotateXPM(XPMConverter.getXPM(file), angle), file.getParent(), true))
            {
                JOptionPane.showMessageDialog(rootPane,"Rotation successful. File saved!");
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(rootPane,ex.getMessage(),"ERROR",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField angleField;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
